{"version":3,"sources":["context/socket.js","config/index.js","components/Child.js","App.jsx","index.js"],"names":["socket","socketio","connect","SocketContext","React","createContext","Child","useContext","useState","joined","setJoined","userId","handleInviteAccepted","useCallback","handleJoinChat","emit","useEffect","on","off","onClick","App","messages","setMessages","message","setMessage","console","log","msg","length","Provider","value","map","name","onChange","e","target","alert","ReactDOM","render","document","getElementById"],"mappings":"wPAKaA,E,OAASC,EAASC,QCDL,IDEbC,EAAgBC,IAAMC,gBEFpB,SAASC,IAGtB,IAAMN,EAASO,qBAAWJ,GAHI,EAKFK,oBAAS,GALP,mBAKvBC,EALuB,KAKfC,EALe,OAMFF,mBAAS,QANP,mBAMvBG,EANuB,KAQxBC,GARwB,KAQDC,uBAAY,WACvCH,GAAU,KACT,KAEGI,EAAiBD,uBAAY,WACjCb,EAAOe,KAAK,uBACX,IAkBH,OAfAC,qBAAU,WAQR,OALAhB,EAAOe,KAAK,cAAeJ,GAG3BX,EAAOiB,GAAG,wBAAyBL,GAE5B,WAGLZ,EAAOkB,IAAI,wBAAyBN,MAErC,CAACZ,EAAQW,EAAQC,IAGlB,6BACIH,EACA,+EAEA,8EAEF,4BAAQU,QAASL,GAAjB,cCnCN,IAqDeM,EArDH,WAAO,IAAD,EACgBZ,mBAAS,CAAC,sBAD1B,mBACTa,EADS,KACCC,EADD,OAEcd,mBAAS,IAFvB,mBAETe,EAFS,KAEAC,EAFA,KAIhBR,qBAAU,WACRS,QAAQC,IAAI,gBACZD,QAAQC,IAAI,mBACZ1B,EAAOiB,GAAG,WAAW,SAACU,GACpBF,QAAQC,IAAI,UAAWC,GAIvBL,EAAY,GAAD,mBAAKD,GAAL,CAAeM,UAE3B,CAACN,EAASO,SAsBb,OACE,kBAACzB,EAAc0B,SAAf,CAAwBC,MAAO9B,GAC7B,6BACGqB,EAASO,OAAS,GACjBP,EAASU,KAAI,SAACJ,GAAD,OACX,6BACE,2BAAIA,OAGV,2BAAOG,MAAOP,EAASS,KAAK,UAAUC,SAAU,SAACC,GAAD,OAxBrC,SAACA,GAChBT,QAAQC,IAAI,aACZF,EAAWU,EAAEC,OAAOL,OAsBuCG,CAASC,MAChE,4BAAQf,QAAS,WAlBL,KAAZI,GACFvB,EAAOe,KAAK,UAAWQ,GACvBC,EAAW,KAEXY,MAAM,0BAcJ,iBAEF,kBAAC9B,EAAD,QCnDN+B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.96c4329a.chunk.js","sourcesContent":["import React from \"react\";\n\nimport socketio from \"socket.io-client\";\nimport { SOCKET_URL } from \"../config\";\n\nexport const socket = socketio.connect(SOCKET_URL);\nexport const SocketContext = React.createContext();\n","export const endPoint = \"http://localhost:5000\";\nexport const config = {\n  \"Content-Type\": \"application/json\"\n};\nexport const SOCKET_URL = \"\"\n// 172.16.41.112\n","import React, {useState, useContext, useCallback, useEffect} from 'react';\nimport {SocketContext} from '../context/socket';\n\n\nexport default function Child() {\n  \n\n  const socket = useContext(SocketContext);\n\n  const [joined, setJoined] = useState(false);\n  const [userId, setUserId] = useState('2333');\n\n  const handleInviteAccepted = useCallback(() => {\n    setJoined(true);\n  }, []);\n\n  const handleJoinChat = useCallback(() => {\n    socket.emit(\"SEND_JOIN_REQUEST\");\n  }, []);\n\n\n  useEffect(() => {\n    // as soon as the component is mounted, do the following tasks:\n    // emit USER_ONLINE event\n    socket.emit(\"USER_ONLINE\", userId); \n\n    // subscribe to socket events\n    socket.on(\"JOIN_REQUEST_ACCEPTED\", handleInviteAccepted); \n\n    return () => {\n      // before the component is destroyed\n      // unbind all event handlers used in this component\n      socket.off(\"JOIN_REQUEST_ACCEPTED\", handleInviteAccepted);\n    };\n  }, [socket, userId, handleInviteAccepted]);\n\n  return (\n    <div>\n      { joined ? (\n        <p>Click the button to send a request to join chat!</p>\n      ) : (\n        <p>Congratulations! You are accepted to join chat!</p>\n      ) }\n      <button onClick={handleJoinChat}>\n        Join Chat\n      </button>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n// import io from \"socket.io-client\";\nimport { SocketContext, socket } from \"./context/socket\";\nimport Child from \"./components/Child\";\n\n// let endPoint = \"http://localhost:5000\";\n// let socket1 = io.connect(`${endPoint}`);\n\nconst App = () => {\n  const [messages, setMessages] = useState([\"Hello And Welcome\"]);\n  const [message, setMessage] = useState(\"\");\n\n  useEffect(() => {\n    console.log(\"in useEffect\");\n    console.log(\"run getMessages\");\n    socket.on(\"message\", (msg) => {\n      console.log(\"message\", msg);\n      //   let allMessages = messages;\n      //   allMessages.push(msg);\n      //   setMessages(allMessages);\n      setMessages([...messages, msg]);\n    });\n  }, [messages.length]);\n\n  // const getMessages = () => {\n\n  // };\n\n  // On Change\n  const onChange = (e) => {\n    console.log(\"on change\");\n    setMessage(e.target.value);\n  };\n\n  // On Click\n  const onClick = () => {\n    if (message !== \"\") {\n      socket.emit(\"message\", message);\n      setMessage(\"\");\n    } else {\n      alert(\"Please Add A Message\");\n    }\n  };\n\n  return (\n    <SocketContext.Provider value={socket}>\n      <div>\n        {messages.length > 0 &&\n          messages.map((msg) => (\n            <div>\n              <p>{msg}</p>\n            </div>\n          ))}\n        <input value={message} name=\"message\" onChange={(e) => onChange(e)} />\n        <button onClick={() => onClick()}>Send Message</button>\n      </div>\n      <Child />\n    </SocketContext.Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}